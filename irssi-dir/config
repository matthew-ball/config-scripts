servers = (
    {
	address = "chat.freenode.net";
	chatnet = "freenode";
	port = "6697";
	use_ssl = "yes";
	ssl_verify = "yes";
	ssl_capath = "/etc/ssl/certs";
	autoconnect = "yes";
    }
);

chatnets = { freenode = { type = "IRC"; }; };

channels = (
    { name = "#emacs"; chatnet = "freenode"; autojoin = "yes"; },
    { name = "#gnus"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#org-mode"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#stumpwm"; chatnet = "freenode"; autojoin = "yes"; },
    { 
	name = "#ubuntu-offtopic";
	chatnet = "freenode";
	autojoin = "yes";
    },
    { name = "#ubuntu-discuss"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#ubuntu-th"; chatnet = "freenode"; autojoin = "yes"; },
    { name = "#ubuntu-au"; chatnet = "freenode"; autojoin = "yes"; },
    { name = "#ubuntu-au-chat"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#ubuntu-fr"; chatnet = "freenode"; autojoin = "no"; },
    {
	name = "#ubuntu-fr-offtopic";
	chatnet = "freenode";
	autojoin = "no";
    },
    { name = "#ubuntu-irc"; chatnet = "freenode"; autojoin = "no"; },
    {
	name = "#ubuntu-programming";
	chatnet = "freenode";
	autojoin = "yes";
    },
    { 
	name = "#ubuntu-bots-devel";
	chatnet = "freenode";
	autojoin = "no";
    },
    { name = "#ubuntu-bots"; chatnet = "freenode"; autojoin = "no"; },
    { 
	name = "#ubuntu-app-devel";
	chatnet = "freenode";
	autojoin = "no";
    },
    { name = "#ubuntu-devel"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#ubuntu-bugs"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#ubuntuforums"; chatnet = "freenode"; autojoin = "no"; },
    {
	name = "#ubuntu-release-party";
	chatnet = "freenode";
	autojoin = "no";
    },
    { 
	name = "#ubuntu-classroom";
	chatnet = "freenode";
	autojoin = "no";
    },
    {
	name = "#ubuntu-classroom-chat";
	chatnet = "freenode";
	autojoin = "no";
    },
    { name = "#ubuntu"; chatnet = "freenode"; autojoin = "yes"; },
    { name = "#ubuntu+1"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#ubuntu-server"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#freenode"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#bash"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#hurd"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#sbcl"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#debian"; chatnet = "freenode"; autojoin = "no"; },
    { 
	name = "#debian-offtopic";
	chatnet = "freenode";
	autojoin = "yes";
    },
    { name = "#conkeror"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#screen"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#irssi"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#ruby"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#scheme"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#guile"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#clojure"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#haskell"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#latex"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#lisp"; chatnet = "freenode"; autojoin = "yes"; },
    { name = "##math"; chatnet = "freenode"; autojoin = "no"; },
    { name = "##programming"; chatnet = "freenode"; autojoin = "yes"; },
    { name = "##economics"; chatnet = "freenode"; autojoin = "no"; },
    { name = "##linguistics"; chatnet = "freenode"; autojoin = "no"; },
    { name = "##philosophy"; chatnet = "freenode"; autojoin = "no"; },
    { name = "#ubuntu-ops"; chatnet = "freenode"; autojoin = "yes"; },
    { 
	name = "#ubuntu-ops-team";
	chatnet = "freenode";
	autojoin = "yes";
    }
);

aliases = {
    AUTH = "msg NickServ IDENTIFY";
    J = "join";
    WJOIN = "join -window";
    WQUERY = "query -window";
    LEAVE = "part";
    BYE = "quit";
    EXIT = "quit";
    SIGNOFF = "quit";
    DESCRIBE = "action";
    DATE = "time";
    HOST = "userhost";
    LAST = "lastlog";
    # SAY = "msg *";
    # WI = "whois";
    # WII = "whois $0 $0";
    # WW = "whowas";
    # W = "who";
    # N = "names";
    M = "msg";
    T = "topic";
    C = "clear";
    # CL = "clear";
    # K = "kick";
    # KB = "kickban";
    # KN = "knockout";
    # BANS = "ban";
    # B = "ban";
    # MUB = "unban *";
    # UB = "unban";
    GUIDELINES = "The guidelines for using the Ubuntu channels can be found here: http://wiki.ubuntu.com/IRC/Guidelines";
    LANGUAGE = "Please watch your language in this channel, thank you.";
    EMACS = "GNU Emacs is a powerful text editor and lisp environment. See: http://www.gnu.org/software/emacs/";
    STUMPWM = "StumpWM is a tiling window manager for X11 written in common lisp. See: http://www.nongnu.org/stumpwm/";
    ORGMODE = "Org-mode is for keeping notes, maintaining TODO lists, project planning, and writing. See: http://orgmode.org/";
    GNUS = "GNUS Network User Services, a news and mail reader with threading, ratings and self-documentation. See: http://www.gnus.org/";
    ERC = "ERC is a powerful, modular and extensible IRC client written in emacs lisp. See: http://savannah.gnu.org/projects/erc/";
    CHURCH = "Church of the Least-Fixed Point. See: http://c2.com/cgi/wiki?ChurchOfTheLeastFixedPoint";
    IG = "ignore";
    UNIG = "unignore";
    # SB = "scrollback";
    UMODE = "mode $N";
    WC = "window close";
    WN = "window new hide";
    SV = "say Irssi $J ($V) - http://irssi.org/";
    # GOTO = "sb goto";
    # CHAT = "dcc chat";
    RUN = "SCRIPT LOAD";
    # SBAR = "STATUSBAR";
    # INVITELIST = "mode $C +I";
    Q = "QUERY";
};

statusbar = {
    # formats: when using {templates}, the template is shown only if it's argument isn't empty unless no argument is given.
    # for example {sb} is printed always, but {sb $T} is printed only if $T isn't empty.

    items = {
	# start/end text in statusbars
	barstart = "{sbstart}";
	barend = "{sbend}";

	topicbarstart = "{topicsbstart}";
	topicbarend = "{topicsbend}";

	# treated "normally", you could change the time/user name to whatever
	time = "{sb $Z}";
	user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

	# treated specially .. window is printed with non-empty windows,
	# window_empty is printed with empty windows
	window = "{sb $winref:$tag/$itemname{sbmode $M}}";
	window_empty = "{sb $winref{sbservertag $tag}}";
	prompt = "{prompt $[.15]itemname}";
	prompt_empty = "{prompt $winname}";
	topic = " $topic";
	topic_empty = " Irssi v$J - http://www.irssi.org";

	# all of these treated specially, they're only displayed when needed
	lag = "{sb Lag: $0-}";
	act = "{sb Act: $0-}";
	more = "-- more --";
    };

    # there's two type of statusbars. root statusbars are either at the top of the screen or at the bottom of the screen.
    # window statusbars are at the top/bottom of each split window in screen.
    default = {
	# the "default statusbar" to be displayed at the bottom of the window (contains all the normal items).
	window = {
	    disabled = "no";

	    # window, root
	    type = "window";
	    # top, bottom
	    placement = "bottom";
	    # number
	    position = "1";
	    # active, inactive, always
	    visible = "active";

	    # list of items in statusbar in the display order
	    items = {
		barstart = { priority = "100"; };
		time = { };
		user = { };
		window = { };
		window_empty = { };
		lag = { priority = "-1"; };
		act = { priority = "10"; };
		more = { priority = "-1"; alignment = "right"; };
		barend = { priority = "100"; alignment = "right"; };
	    };
	};

	# statusbar to use in inactive split windows
	window_inact = {
	    type = "window";
	    placement = "bottom";
	    position = "1";
	    visible = "inactive";
	    items = {
		barstart = { priority = "100"; };
		window = { };
		window_empty = { };
		more = { priority = "-1"; alignment = "right"; };
		barend = { priority = "100"; alignment = "right"; };
	    };
	};

	# we treat input line as yet another statusbar :)
	# it's possible to add other items before or after the input line item.
	prompt = {
	    type = "root";
	    placement = "bottom";
	    # we want to be at the bottom always
	    position = "100";
	    visible = "always";
	    items = {
		prompt = { priority = "-1"; };
		prompt_empty = { priority = "-1"; };
		# treated specially, this is the real input line.
		input = { priority = "10"; };
	    };
	};

	# topicbar
	topic = {
	    type = "root";
	    placement = "top";
	    position = "1";
	    visible = "always";
	    items = {
		topicbarstart = { priority = "100"; };
		topic = { };
		topic_empty = { };
		topicbarend = { priority = "100"; alignment = "right"; };
	    };
	    disabled = "yes";
	};
    };
};

settings = {
    core = {
	real_name = "Matthew Ball";
	user_name = "chu";
	nick = "chu";
	timestamp_format = "%H:%M";
    };
    "fe-text" = { actlist_sort = "refnum"; };
    "fe-common/core" = { theme = "parenthetical"; };
    "perl/core/scripts" = { spellcheck_default_language = "en_GB"; };
};

ignores = (
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#emacs" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#gnus" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#org-mode" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#stumpwm" ); },
    {
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "#ubuntu-discuss" );
    },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#ubuntu-au" ); },
    {
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "#ubuntu-au-chat" );
    },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#ubuntu-fr" ); },
    {
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "#ubuntu-fr-offtopic" );
    },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#ubuntu-irc" ); },
    {
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "#ubuntu-programming" );
    },
    {
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "#ubuntu-bots-devel" );
    },
    { 
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "#ubuntu-bots" );
    },
    {
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "#ubuntu-app-devel" );
    },
    { 
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "#ubuntu-devel" );
    },
    { 
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "#ubuntu-bugs" );
    },
    { 
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "#ubuntuforums" );
    },
    {
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "#ubuntu-release-party" );
    },
    {
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "#ubuntu-classroom" );
    },
    {
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "#ubuntu-classroom-chat" );
    },
    # { level = "JOINS PARTS QUITS NICKS"; channels = ( "#ubuntu" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#ubuntu+1" ); },
    {
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "#ubuntu-server" );
    },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#freenode" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#lisp" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#ruby" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#scheme" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#guile" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#clojure" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#haskell" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#latex" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#bash" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#hurd" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#sbcl" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#debian" ); },
    {
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "#debian-offtopic" );
    },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#conkeror" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#screen" ); },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#irssi" ); },
    { 
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "##programming" );
    },
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "##economics" ); },
    { 
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "##linguistics" );
    },
    { 
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "##philosophy" );
    },
    # { level = "JOINS PARTS QUITS NICKS"; channels = ( "#ubuntu-offtopic" ); },
    # { level = "JOINS PARTS QUITS NICKS"; channels = ( "#ubuntu-th" ); }, 
    { level = "JOINS PARTS QUITS NICKS"; channels = ( "#ubuntu-ops" ); },
    {
	level = "JOINS PARTS QUITS NICKS";
	channels = ( "#ubuntu-ops-team" );
    }
);
